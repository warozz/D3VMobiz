{"version":3,"sources":["../../src/pages/auto-login/auto-login.module.ts","../../node_modules/angular2-jwt/angular2-jwt.js","../../src/pages/auto-login/auto-login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACH;AAU7C;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAR/B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,kEAAa,CAAC;aACxC;SACF,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;ACZhC;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAA2D,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+CAA+C;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,8CAA8C,EAAE;AAChJ;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mCAAmC,uDAAuD;AAC1F;AACA;AACA,mCAAmC,0DAA0D;AAC7F;AACA;AACA,mCAAmC,yDAAyD;AAC5F;AACA;AACA,mCAAmC,0DAA0D;AAC7F;AACA;AACA,mCAAmC,2DAA2D;AAC9F;AACA;AACA,mCAAmC,wDAAwD;AAC3F;AACA;AACA,mCAAmC,2DAA2D;AAC9F;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D;AACA;AACA,mC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AAC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","file":"17.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AutoLoginPage } from './auto-login';\n\n@NgModule({\n  declarations: [\n    AutoLoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AutoLoginPage),\n  ],\n})\nexport class AutoLoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/auto-login/auto-login.module.ts","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar http_1 = require(\"@angular/http\");\nvar core_1 = require(\"@angular/core\");\nvar Observable_1 = require(\"rxjs/Observable\");\nrequire(\"rxjs/add/observable/fromPromise\");\nrequire(\"rxjs/add/observable/defer\");\nrequire(\"rxjs/add/operator/mergeMap\");\nvar AuthConfigConsts = (function () {\n    function AuthConfigConsts() {\n    }\n    return AuthConfigConsts;\n}());\nAuthConfigConsts.DEFAULT_TOKEN_NAME = 'token';\nAuthConfigConsts.DEFAULT_HEADER_NAME = 'Authorization';\nAuthConfigConsts.HEADER_PREFIX_BEARER = 'Bearer ';\nexports.AuthConfigConsts = AuthConfigConsts;\nvar AuthConfigDefaults = {\n    headerName: AuthConfigConsts.DEFAULT_HEADER_NAME,\n    headerPrefix: null,\n    tokenName: AuthConfigConsts.DEFAULT_TOKEN_NAME,\n    tokenGetter: function () { return localStorage.getItem(AuthConfigDefaults.tokenName); },\n    noJwtError: false,\n    noClientCheck: false,\n    globalHeaders: [],\n    noTokenScheme: false\n};\n/**\n * Sets up the authentication configuration.\n */\nvar AuthConfig = (function () {\n    function AuthConfig(config) {\n        config = config || {};\n        this._config = objectAssign({}, AuthConfigDefaults, config);\n        if (this._config.headerPrefix) {\n            this._config.headerPrefix += ' ';\n        }\n        else if (this._config.noTokenScheme) {\n            this._config.headerPrefix = '';\n        }\n        else {\n            this._config.headerPrefix = AuthConfigConsts.HEADER_PREFIX_BEARER;\n        }\n        if (config.tokenName && !config.tokenGetter) {\n            this._config.tokenGetter = function () { return localStorage.getItem(config.tokenName); };\n        }\n    }\n    AuthConfig.prototype.getConfig = function () {\n        return this._config;\n    };\n    return AuthConfig;\n}());\nexports.AuthConfig = AuthConfig;\nvar AuthHttpError = (function (_super) {\n    __extends(AuthHttpError, _super);\n    function AuthHttpError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AuthHttpError;\n}(Error));\nexports.AuthHttpError = AuthHttpError;\n/**\n * Allows for explicit authenticated HTTP requests.\n */\nvar AuthHttp = (function () {\n    function AuthHttp(options, http, defOpts) {\n        var _this = this;\n        this.http = http;\n        this.defOpts = defOpts;\n        this.config = options.getConfig();\n        this.tokenStream = new Observable_1.Observable(function (obs) {\n            obs.next(_this.config.tokenGetter());\n        });\n    }\n    AuthHttp.prototype.mergeOptions = function (providedOpts, defaultOpts) {\n        var newOptions = defaultOpts || new http_1.RequestOptions();\n        if (this.config.globalHeaders) {\n            this.setGlobalHeaders(this.config.globalHeaders, providedOpts);\n        }\n        newOptions = newOptions.merge(new http_1.RequestOptions(providedOpts));\n        return newOptions;\n    };\n    AuthHttp.prototype.requestHelper = function (requestArgs, additionalOptions) {\n        var options = new http_1.RequestOptions(requestArgs);\n        if (additionalOptions) {\n            options = options.merge(additionalOptions);\n        }\n        return this.request(new http_1.Request(this.mergeOptions(options, this.defOpts)));\n    };\n    AuthHttp.prototype.requestWithToken = function (req, token) {\n        if (!this.config.noClientCheck && !tokenNotExpired(undefined, token)) {\n            if (!this.config.noJwtError) {\n                return new Observable_1.Observable(function (obs) {\n                    obs.error(new AuthHttpError('No JWT present or has expired'));\n                });\n            }\n        }\n        else {\n            req.headers.set(this.config.headerName, this.config.headerPrefix + token);\n        }\n        return this.http.request(req);\n    };\n    AuthHttp.prototype.setGlobalHeaders = function (headers, request) {\n        if (!request.headers) {\n            request.headers = new http_1.Headers();\n        }\n        headers.forEach(function (header) {\n            var key = Object.keys(header)[0];\n            var headerValue = header[key];\n            request.headers.set(key, headerValue);\n        });\n    };\n    AuthHttp.prototype.request = function (url, options) {\n        var _this = this;\n        if (typeof url === 'string') {\n            return this.get(url, options); // Recursion: transform url from String to Request\n        }\n        // else if ( ! url instanceof Request ) {\n        //   throw new Error('First argument must be a url string or Request instance.');\n        // }\n        // from this point url is always an instance of Request;\n        var req = url;\n        // Create a cold observable and load the token just in time\n        return Observable_1.Observable.defer(function () {\n            var token = _this.config.tokenGetter();\n            if (token instanceof Promise) {\n                return Observable_1.Observable.fromPromise(token).mergeMap(function (jwtToken) { return _this.requestWithToken(req, jwtToken); });\n            }\n            else {\n                return _this.requestWithToken(req, token);\n            }\n        });\n    };\n    AuthHttp.prototype.get = function (url, options) {\n        return this.requestHelper({ body: '', method: http_1.RequestMethod.Get, url: url }, options);\n    };\n    AuthHttp.prototype.post = function (url, body, options) {\n        return this.requestHelper({ body: body, method: http_1.RequestMethod.Post, url: url }, options);\n    };\n    AuthHttp.prototype.put = function (url, body, options) {\n        return this.requestHelper({ body: body, method: http_1.RequestMethod.Put, url: url }, options);\n    };\n    AuthHttp.prototype.delete = function (url, options) {\n        return this.requestHelper({ body: '', method: http_1.RequestMethod.Delete, url: url }, options);\n    };\n    AuthHttp.prototype.patch = function (url, body, options) {\n        return this.requestHelper({ body: body, method: http_1.RequestMethod.Patch, url: url }, options);\n    };\n    AuthHttp.prototype.head = function (url, options) {\n        return this.requestHelper({ body: '', method: http_1.RequestMethod.Head, url: url }, options);\n    };\n    AuthHttp.prototype.options = function (url, options) {\n        return this.requestHelper({ body: '', method: http_1.RequestMethod.Options, url: url }, options);\n    };\n    return AuthHttp;\n}());\nAuthHttp = __decorate([\n    core_1.Injectable(),\n    __metadata(\"design:paramtypes\", [AuthConfig, http_1.Http, http_1.RequestOptions])\n], AuthHttp);\nexports.AuthHttp = AuthHttp;\n/**\n * Helper class to decode and find JWT expiration.\n */\nvar JwtHelper = (function () {\n    function JwtHelper() {\n    }\n    JwtHelper.prototype.urlBase64Decode = function (str) {\n        var output = str.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0: {\n                break;\n            }\n            case 2: {\n                output += '==';\n                break;\n            }\n            case 3: {\n                output += '=';\n                break;\n            }\n            default: {\n                throw 'Illegal base64url string!';\n            }\n        }\n        return this.b64DecodeUnicode(output);\n    };\n    // credits for decoder goes to https://github.com/atk\n    JwtHelper.prototype.b64decode = function (str) {\n        var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var output = '';\n        str = String(str).replace(/=+$/, '');\n        if (str.length % 4 == 1) {\n            throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n        }\n        for (\n        // initialize result and counters\n        var bc = 0, bs = void 0, buffer = void 0, idx = 0; \n        // get next character\n        buffer = str.charAt(idx++); \n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n            // try to find character in table (0-63, not found => -1)\n            buffer = chars.indexOf(buffer);\n        }\n        return output;\n    };\n    // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\n    JwtHelper.prototype.b64DecodeUnicode = function (str) {\n        return decodeURIComponent(Array.prototype.map.call(this.b64decode(str), function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    };\n    JwtHelper.prototype.decodeToken = function (token) {\n        var parts = token.split('.');\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n        var decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            throw new Error('Cannot decode the token');\n        }\n        return JSON.parse(decoded);\n    };\n    JwtHelper.prototype.getTokenExpirationDate = function (token) {\n        var decoded;\n        decoded = this.decodeToken(token);\n        if (!decoded.hasOwnProperty('exp')) {\n            return null;\n        }\n        var date = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        date.setUTCSeconds(decoded.exp);\n        return date;\n    };\n    JwtHelper.prototype.isTokenExpired = function (token, offsetSeconds) {\n        var date = this.getTokenExpirationDate(token);\n        offsetSeconds = offsetSeconds || 0;\n        if (date == null) {\n            return false;\n        }\n        // Token expired?\n        return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\n    };\n    return JwtHelper;\n}());\nexports.JwtHelper = JwtHelper;\n/**\n * Checks for presence of token and that token hasn't expired.\n * For use with the @CanActivate router decorator and NgIf\n */\nfunction tokenNotExpired(tokenName, jwt) {\n    if (tokenName === void 0) { tokenName = AuthConfigConsts.DEFAULT_TOKEN_NAME; }\n    var token = jwt || localStorage.getItem(tokenName);\n    var jwtHelper = new JwtHelper();\n    return token != null && !jwtHelper.isTokenExpired(token);\n}\nexports.tokenNotExpired = tokenNotExpired;\nexports.AUTH_PROVIDERS = [\n    {\n        provide: AuthHttp,\n        deps: [http_1.Http, http_1.RequestOptions],\n        useFactory: function (http, options) {\n            return new AuthHttp(new AuthConfig(), http, options);\n        }\n    }\n];\nfunction provideAuth(config) {\n    return [\n        {\n            provide: AuthHttp,\n            deps: [http_1.Http, http_1.RequestOptions],\n            useFactory: function (http, options) {\n                return new AuthHttp(new AuthConfig(config), http, options);\n            }\n        }\n    ];\n}\nexports.provideAuth = provideAuth;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\nfunction toObject(val) {\n    if (val === null || val === undefined) {\n        throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n    return Object(val);\n}\nfunction objectAssign(target) {\n    var source = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        source[_i - 1] = arguments[_i];\n    }\n    var from;\n    var to = toObject(target);\n    var symbols;\n    for (var s = 1; s < arguments.length; s++) {\n        from = Object(arguments[s]);\n        for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n                to[key] = from[key];\n            }\n        }\n        if (Object.getOwnPropertySymbols) {\n            symbols = Object.getOwnPropertySymbols(from);\n            for (var i = 0; i < symbols.length; i++) {\n                if (propIsEnumerable.call(from, symbols[i])) {\n                    to[symbols[i]] = from[symbols[i]];\n                }\n            }\n        }\n    }\n    return to;\n}\n/**\n * Module for angular2-jwt\n * @experimental\n */\nvar AuthModule = AuthModule_1 = (function () {\n    function AuthModule(parentModule) {\n        if (parentModule) {\n            throw new Error('AuthModule is already loaded. Import it in the AppModule only');\n        }\n    }\n    AuthModule.forRoot = function (config) {\n        return {\n            ngModule: AuthModule_1,\n            providers: [\n                { provide: AuthConfig, useValue: config }\n            ]\n        };\n    };\n    return AuthModule;\n}());\nAuthModule = AuthModule_1 = __decorate([\n    core_1.NgModule({\n        imports: [http_1.HttpModule],\n        providers: [AuthHttp, JwtHelper]\n    }),\n    __param(0, core_1.Optional()), __param(0, core_1.SkipSelf()),\n    __metadata(\"design:paramtypes\", [AuthModule])\n], AuthModule);\nexports.AuthModule = AuthModule;\nvar AuthModule_1;\n//# sourceMappingURL=angular2-jwt.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular2-jwt/angular2-jwt.js\n// module id = 1771\n// module chunks = 6 17","import { FunctionName } from './../../providers/constants/function-name';\nimport { DateUtil } from './../../providers/utility/date-util';\nimport { ServiceName } from './../../providers/constants/service-name';\nimport { ApplicationSessionM } from './../../providers/applicationsession/application-session-model';\nimport { ApiDbProvider } from './../../providers/api-db/api-db';\nimport { AgentModel } from './../../providers/agent/agent-model';\nimport { LoadingDirective } from './../../directives/extends/loading/loading';\nimport { ApiProvider } from './../../providers/api/api';\nimport { AlertDirective } from './../../directives/extends/alert/alert';\nimport { JwtHelper } from 'angular2-jwt';\nimport { CommonUtilProvider } from './../../providers/common-util/common-util';\nimport { RequestModel } from './../../providers/model/request-model';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Platform } from 'ionic-angular';\nimport { SynchronizeTlpromptProvider } from '../../providers/synchronize-tlprompt/synchronize-tlprompt';\nimport { Storage } from '@ionic/storage';\nimport { FUNCTION_TYPE } from '@angular/compiler/src/output/output_ast';\nimport { UUID } from 'angular2-uuid';\nimport { Http } from '@angular/http';\n/**\n * Generated class for the AutoLoginPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage({segment : 'auto/:encode'})\n@Component({\n  selector: 'page-auto-login',\n  templateUrl: 'auto-login.html',\n})\nexport class AutoLoginPage {\nrequesturl = '';\n  constructor( public navParams: NavParams ,public commonApi: CommonUtilProvider,\n    private alertCtrl: AlertDirective,\n    private loadingCtrl: LoadingDirective,\n    private apiProvider: ApiProvider,\n    private apiDbProvider: ApiDbProvider,private platform: Platform, private navCtrl: NavController, private syncTLprompt: SynchronizeTlpromptProvider,\n    private storage: Storage, private http: Http\n  ) {\n    try {\n       this.requesturl = decodeURIComponent(navParams.get('encode'));\n    } catch (error) {\n      this.navCtrl.setRoot('LoginPage');\n    }\n    console.log(decodeURIComponent(navParams.get('encode')));\n\n\n    \n    console.log(this.requesturl);\n    \n    this.loadingCtrl.present();\n    this.autoLogin(this.requesturl).then(\n    res=>{ \n      console.log(res);\n      let obj : any = res;\n      if(obj.status == 'SUCCESS'){\n\n        let jwtHelper: JwtHelper = new JwtHelper();\n        let token = obj.token;\n        let tokenRawData: any = jwtHelper.decodeToken(token);\n        let dataDecode: any = tokenRawData.data;\n        console.log(dataDecode);\n        this.apiProvider.genarateTokenToAgentM(dataDecode, (agenM: AgentModel): void => {\n\n          // profile\n          this.storage.set('loginProfile', agenM);\n         console.log(agenM);\n          //Step insert agent detail to SQLLite.\n          let request = new RequestModel();\n          request.serviceName = ServiceName.INSERT;\n          request.param = agenM;\n          this.apiDbProvider.agentService(request).then(\n            (res) => {\n              //Step insert to SQLLite table applicationSession.\n              let appSessionM: ApplicationSessionM = new ApplicationSessionM();\n              appSessionM.jwt = token;\n              appSessionM.agentid = agenM.agentid;\n              appSessionM.lastonlinemode = DateUtil.date2str(new Date());\n\n              let request = new RequestModel();\n              request.serviceName = ServiceName.INSERT;\n              request.param = appSessionM;\n              this.apiDbProvider.applicationSessionService(request).then(\n                (res) => {\n                  return res;//Next step check version\n                },\n                (err) => {\n                  this.alertCtrl.error(err);\n                }\n              ).then(\n                (res) => {\n                  if (this.platform.is('core') || this.platform.is('mobileweb')) {\n                    // website\n                    this.storage.set('tlpromptMode', 2).then(() => {\n                      setTimeout(() => {\n                        //this.loadingCtrl.dismiss();\n                        this.loadingCtrl.dismiss();\n                        this.navCtrl.setRoot('HomePage');\n                      }, 2000);\n                    });\n                  }\n                  else {\n                    //Step check version TL-PROMPT.\n                    let requests = new RequestModel();\n                    requests.mode = 1;\n                    requests.functionName = FunctionName.VERSION;\n                    requests.serviceName = ServiceName.SELECT_ALL;\n                    this.apiProvider.callData(requests).then(\n                      (res) => {\n                        //this.loadingCtrl.dismiss();\n                        let objs: any = res;\n                        let datemodified: string = objs[0].datemodified;\n                        let patch: string = objs[0].patch;\n                        let version: string = objs[0].version;\n\n                        this.http.get('assets/json/version.json').subscribe(data => {\n                          let versions: any = data.json();\n                          let date: any = versions[0]['date'];\n\n                          var dateServer = new Date(datemodified);\n                          var dateDevice = new Date(date);\n                          console.log(\"Date on server \" + dateServer);\n                          console.log(\"Date on device \" + dateDevice);\n                          if (dateServer > dateDevice)\n                            this.alertCtrl.warning('กรุณาอัปเดตแอปพลิเคชันเป็นเวอร์ชัน ' + version);\n\n                          //Final step.\n                          this.syncTLprompt.startSync();\n                          // app tlprompt\n                          this.storage.set('tlpromptMode', 1);\n                          this.navCtrl.setRoot('PincodePage');\n\n                        });\n\n                      },\n                      (err) => {\n                        //this.loadingCtrl.dismiss();\n                        this.alertCtrl.error(err);\n                        // app tlprompt\n                         this.storage.set('tlpromptMode', 1);\n                        this.navCtrl.setRoot('PincodePage');\n                      }\n                    );\n                  }\n                },\n                (err) => {\n                  this.alertCtrl.error(err);\n                });\n            },\n            (err) => {\n              let alert = this.alertCtrl.create({\n                title: 'แจ้งเตือน',\n                subTitle: err,\n                buttons: ['ตกลง']\n              });\n              alert.present();\n            }\n          );\n\n       });\n      }\n      //data = res.status;\n     \n    },\n    err =>alert(err)).catch(a => alert(\"anthen fail\"));\n    \n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad AutoLoginPage');\n  }\n\n  async autoLogin(encode : string){\n    let request = new RequestModel();\n    request.functionName = FunctionName.AUTOLOGIN;\n    request.param =  {uID : UUID.UUID(), username : encode};\n    return await this.commonApi.postApi(request);\n  }\n\n  ngAfterViewInit(){\n   // alert(this.requesturl);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/auto-login/auto-login.ts"],"sourceRoot":""}
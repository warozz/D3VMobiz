{"version":3,"sources":["../../src/pages/setting/setting.module.ts","../../src/pages/setting/setting.ts"],"names":[],"mappings":"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","file":"25.js","sourcesContent":["import { NgModule,NO_ERRORS_SCHEMA } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SettingPage } from './setting';\nimport { ComponentsModule } from './../../components/components.module';\nimport { DirectivesModule } from './../../directives/directives.module';\nimport { IonicSelectableModule } from 'ionic-selectable';\n@NgModule({\n  declarations: [\n    SettingPage,\n  ],\n  imports: [\n    ComponentsModule,\n    DirectivesModule,\n    IonicPageModule.forChild(SettingPage),\n    IonicSelectableModule\n  ],\n  schemas: [\n    NO_ERRORS_SCHEMA\n  ]\n})\nexport class SettingPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/setting/setting.module.ts","import { PremiumRateM } from './../../providers/planprovide-table/premiumrate/premiumrate-model';\nimport { SumrateService } from './../../providers/planprovide-table/sumrate/sumrate-service';\nimport { SettingPlanProvider } from './../../providers/setting-plan/setting-plan';\nimport { OnInit } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ModalController, ModalOptions, Modal } from 'ionic-angular';\nimport { TLPlanService } from '../../providers/tlplan/tlplan-service';\nimport { RequestModel } from '../../providers/model/request-model';\nimport { FunctionName } from '../../providers/constants/function-name';\nimport { ServiceName } from '../../providers/constants/service-name';\nimport { TLPlanModel } from '../../providers/tlplan/tlplan-model';\nimport { AlertDirective } from '../../directives/extends/alert/alert';\nimport { CommonUtilProvider } from '../../providers/common-util/common-util';\nimport { PmrateM } from '../../providers/planprovide-table/pmrate/pmrate-model';\nimport { ApiDbProvider } from '../../providers/api-db/api-db';\nimport { SumrateM } from '../../providers/planprovide-table/sumrate/sumrate-model';\nimport { PlanRiderModel } from '../../providers/planprovide-table/planrider/planrider-model';\nimport { ExtendedM } from '../../providers/extended/extended-model';\nimport { CouponM } from '../../providers/coupon/coupon-model';\nimport { Network } from '@ionic-native/network';\nimport { SQLiteHandle } from '../../providers/utility/sqlite-handle';\nimport { PopupSynchronizeComponent } from '../../components/utility/popup-synchronize/popup-synchronize';\nimport { LoadingDirective } from '../../directives/extends/loading/loading';\nimport { IonicSelectableComponent } from 'ionic-selectable';\n\n\n/**\n * Generated class for the SettingPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n// class Port {\n//   public id: number;\n//   public name: string;\n// }\n@IonicPage({\n  segment: 'ตั้งค่า'\n})\n@Component({\n  selector: 'page-setting',\n  templateUrl: 'setting.html',\n})\nexport class SettingPage implements OnInit{\n  // ports: Port[];\n  // port: Port;\n  plans : TLPlanModel[];\n  plan :TLPlanModel;\n  plancode: string = '';\n  tlplanfull: TLPlanModel[]  ;\n  tlplanshow: TLPlanModel[] ;\n  dlplan: TLPlanModel[] ;\n  private online : boolean = true;\n\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams, \n    public planService: SettingPlanProvider, \n    private tlplanService: TLPlanService,\n    private alertCtrl: AlertDirective,\n    private commonApi: CommonUtilProvider,\n    private apiDbProvider: ApiDbProvider,\n    private network: Network,\n    private modalCtrl: ModalController,\n    private loadingCtrl: LoadingDirective) {\n    \n    //   this.ports = [\n    //     { id: 1, name: 'Tokai' },\n    //     { id: 2, name: 'Vladivostok' },\n    //     { id: 3, name: 'Navlakhi' }\n    // ];\n          let disconnectSubscription = this.network.onDisconnect().subscribe(() => {\n           if(this.online)\n           {\n              alertCtrl.warning(\"กรุณาเชื่อมต่ออินเทอร์เน็ต เพื่อเลือกแบบประกัน\");\n              this.online = false;\n           } \n            \n          });\n\n          // this.network.onConnect().subscribe(() => {\n          //   this.online = true;\n          //   if(typeof this.dlplan == 'undefined')\n          //     this.getAllPlanFromApi();\n          // })\n          //this.getAllPlanFromApi();\n\n    }\n\n    portChange(event: {\n      component: IonicSelectableComponent,\n      value: any \n  }) {\n      //alert('port:'+ event.value.planCode);\n      this.plancode = event.value.planCode;\n  }\n\n  ngOnInit(): void {\n    //alert(\"---1---\");\n    this.getStart();\n    \n  }\n  private async getStart(){\n    await this.selectPlanFromDB();\n    //alert(\"---2---\");\n    if (this.network.type === 'none') {\n      this.online = false;\n      this.alertCtrl.warning(\"กรุณาเชื่อมต่ออินเทอร์เน็ต เพื่อเลือกแบบประกัน\");\n    }\n    else {\n      this.online = true;\n      await this.getAllPlanFromApi();\n    }\n\n    \n    //alert(\"---3---\");\n    await this.filterDropDown();\n    //alert(\"---4---\");\n    this.plancode = '';\n  }\n\n  private async getInState(){\n    await this.selectPlanFromDB();\n    await this.filterDropDown();\n  }\n  private async getAllPlanFromApi(){\n\n    let reqModel:RequestModel = new RequestModel();\n    reqModel.functionName = FunctionName.TLPLAN;\n    reqModel.serviceName = ServiceName.SELECT;\n\n\n\n    this.loadingCtrl.present();\n    this.commonApi.callRestServiceTLPrompt(reqModel).then(\n      res=>{ \n        let result: any = res;\n        if(result.datas != null){\n          this.tlplanfull = result.datas;\n          this.dlplan =result.datas;\n          //this.plans =result.datas;\n          this.filterDropDown();\n        }\n        else{\n         this.tlplanfull = [];\n        }\n        \n        this.loadingCtrl.dismiss();\n      },\n      err => { \n        this.loadingCtrl.dismiss();\n        this.alertCtrl.error(err);\n      }\n    );\n\n    ///\n    // await this.planService.getALLPlan().then(\n    //   res=>{ \n    //     if(res.status.status == 'S'){\n    //       this.tlplanfull = res.body.datas;\n    //       this.dlplan = res.body.datas;\n    //       this.filterDropDown();\n    //     }\n    //     else{\n    //      this.tlplanfull = [];\n    //     }\n    //   },\n    //   err => { this.alertCtrl.error(err);}\n    // );\n  }\n\n  private async insertPlanCode(){\n    \n    //alert(JSON.stringify(this.plancode));\n    if (this.plancode == '')\n      return;\n\n    if (this.network.type === 'none') {\n      this.alertCtrl.warning(\"กรุณาเชื่อมต่ออินเทอร์เน็ต เพื่อเลือกแบบประกัน\");\n      return;\n    }\n    SQLiteHandle.recordBeWrite = 0;\n    SQLiteHandle.recordTotalSize = 0;\n\n    if(typeof(this.tlplanshow) !== 'undefined'){\n      if(this.tlplanshow.length == 10){\n        this.alertCtrl.warning('คุณได้เลือกแบบประกันครบ 10 แบบแล้ว');\n        return;\n      }\n    }\n    let data = this.tlplanfull.filter((item,index) => item.planCode === this.plancode);\n    let requests  = new RequestModel;\n    requests.param = data; \n\n    SQLiteHandle.recordTotalSize = Number(1);\n\n    if (SQLiteHandle.recordTotalSize > 0) {\n\n      SQLiteHandle.isOnLoadScreenSync = true;\n\n      let opts: ModalOptions = {\n        enableBackdropDismiss: false,\n        cssClass: 'synchronize'\n      }\n\n      opts.enableBackdropDismiss = false;\n      let modal: Modal = this.modalCtrl.create(PopupSynchronizeComponent, null, opts); \n      modal.present();\n   }\n\n    await this.tlplanService.insert(requests).then( \n      (res) => {\n\n      }, (err) => {\n        this.alertCtrl.error(err);\n      }).then(\n        (res) => {\n\n          let objM : PmrateM = new PmrateM();\n          objM.plancode = this.plancode;\n\n          let objMs : Array<PmrateM> = [];\n          objMs.push(objM);\n\n          let reqM: RequestModel = new RequestModel();\n          reqM.functionName = FunctionName.PMRATE;\n          reqM.serviceName = ServiceName.SELECT;\n          reqM.searchkey = \"plancode\";\n          reqM.param = objMs;\n          this.commonApi.callRestServiceTLPrompt(reqM).then(\n            (res) => {\n              let body: any = res;\n              let objMs: Array<PmrateM> = body.datas;\n              if (objMs != null && objMs.length > 0) {\n\n                let reqM: RequestModel = new RequestModel();\n                reqM.functionName = FunctionName.PMRATE;\n                reqM.serviceName = ServiceName.INSERT;\n                reqM.param = objMs;\n                this.apiDbProvider.pmrateService(reqM); \n              }\n              else {\n                return Promise.resolve();\n              }\n            }, (err) => {\n              console.log(err);\n            });\n\n        }, (err) => {\n          console.log(err);\n        }\n      ).then(\n        (res) => {\n\n          let objM : PlanRiderModel = new PlanRiderModel();\n          objM.plancode = this.plancode;\n\n          let objMs : Array<PlanRiderModel> = [];\n          objMs.push(objM);\n\n          let reqM: RequestModel = new RequestModel();\n          reqM.functionName = FunctionName.PLAN_RIDER;\n          reqM.serviceName = ServiceName.SELECT;\n          reqM.searchkey = \"plancode\";\n          reqM.param = objMs;\n          this.commonApi.callRestServiceTLPrompt(reqM).then(\n            (res) => {\n              let body: any = res;\n              let objMs: Array<PlanRiderModel> = body.datas;\n              if (objMs != null && objMs.length > 0) {\n\n                SQLiteHandle.recordTotalSize = Number(SQLiteHandle.recordTotalSize + objMs.length);\n\n                let reqM: RequestModel = new RequestModel();\n                reqM.functionName = FunctionName.PLAN_RIDER;\n                reqM.serviceName = ServiceName.INSERT;\n                reqM.param = objMs;\n                this.apiDbProvider.planRiderService(reqM);\n              }\n            }, (err) => {\n              console.log(err);\n            });\n\n        }, (err) => {\n          console.log(err);\n        }\n      ).then(\n        (res) => {\n\n          let objM : SumrateM = new SumrateM();\n          objM.plancode = this.plancode;\n\n          let objMs : Array<SumrateM> = [];\n          objMs.push(objM);\n\n          let reqM: RequestModel = new RequestModel();\n          reqM.functionName = FunctionName.SUMRATE;\n          reqM.serviceName = ServiceName.SELECT;\n          reqM.searchkey = \"plancode\";\n          reqM.param = objMs;\n          this.commonApi.callRestServiceTLPrompt(reqM).then(\n            (res) => {\n              let body: any = res;\n              let objMs: Array<SumrateM> = body.datas;\n              if (objMs != null && objMs.length > 0) {\n\n                SQLiteHandle.recordTotalSize = Number(SQLiteHandle.recordTotalSize + objMs.length);\n\n                let reqM: RequestModel = new RequestModel();\n                reqM.functionName = FunctionName.SUMRATE;\n                reqM.serviceName = ServiceName.INSERT;\n                reqM.param = objMs;\n                this.apiDbProvider.sumrateService(reqM);\n              }\n            }, (err) => {\n              console.log(err);\n            });\n        }\n        , (err) => {\n          console.log(err);\n        }\n      ).then(\n        (res) => {\n\n          let objM: ExtendedM = new ExtendedM();\n          objM.plancode = this.plancode;//Require = Y\n      \n          let objMs: Array<ExtendedM> = [];\n          objMs.push(objM);\n      \n          let reqM: RequestModel = new RequestModel();\n          reqM.functionName = FunctionName.EXTENDED;\n          reqM.serviceName = ServiceName.SELECT;\n          reqM.searchkey = \"plancode\";\n          reqM.param = objMs;\n\n          this.commonApi.callRestServiceTLPrompt(reqM).then(\n            (res) => {\n              let body: any = res;\n              let objMs: Array<any> = body.datas;\n              if (objMs != null && objMs.length > 0) {\n\n                SQLiteHandle.recordTotalSize = Number(SQLiteHandle.recordTotalSize + objMs.length);\n\n                let reqM: RequestModel = new RequestModel();\n                reqM.functionName = FunctionName.EXTENDED;\n                reqM.serviceName = ServiceName.INSERT;\n                reqM.param = objMs;\n                this.apiDbProvider.extendedService(reqM);\n              }\n            }, (err) => {\n              console.log(err);\n            });\n\n        }\n        , (err) => {\n          console.log(err);\n        }\n      ).then(\n        (res) => {\n\n          let objM: CouponM = new CouponM();\n          objM.plancode = this.plancode;//Require = Y\n      \n          let objMs: Array<CouponM> = [];\n          objMs.push(objM);\n      \n          let reqM: RequestModel = new RequestModel();\n          reqM.functionName = FunctionName.COUPON;\n          reqM.serviceName = ServiceName.SELECT;\n          reqM.searchkey = \"plancode\";\n          reqM.param = objMs;\n\n          this.commonApi.callRestServiceTLPrompt(reqM).then(\n            (res) => {\n              let body: any = res;\n              let objMs: Array<any> = body.datas;\n              if (objMs != null && objMs.length > 0) {\n\n                SQLiteHandle.recordTotalSize = Number(SQLiteHandle.recordTotalSize + objMs.length);\n\n                let reqM: RequestModel = new RequestModel();\n                reqM.functionName = FunctionName.COUPON;\n                reqM.serviceName = ServiceName.INSERT;\n                reqM.param = objMs;\n                this.apiDbProvider.couponService(reqM);\n              }\n            }, (err) => {\n              console.log(err);\n            });\n          \n        }\n        , (err) => {\n          console.log(err);\n        }\n\n      ).then(\n        (res) => {\n\n          let objM: PremiumRateM = new PremiumRateM();\n          objM.plancode = this.plancode;//Require = Y\n      \n          let objMs: Array<PremiumRateM> = [];\n          objMs.push(objM);\n      \n          let reqM: RequestModel = new RequestModel();\n          reqM.functionName = FunctionName.PREMIUMRATE;\n          reqM.serviceName = ServiceName.SELECT;\n          reqM.searchkey = \"plancode\";\n          reqM.param = objMs;\n\n          this.commonApi.callRestServiceTLPrompt(reqM).then(\n            (res) => {\n              let body: any = res;\n              let objMs: Array<any> = body.datas;\n              if (objMs != null && objMs.length > 0) {\n\n                SQLiteHandle.recordTotalSize = Number(SQLiteHandle.recordTotalSize + objMs.length);\n\n                let reqM: RequestModel = new RequestModel();\n                reqM.functionName = FunctionName.PREMIUMRATE;\n                reqM.serviceName = ServiceName.INSERT;\n                reqM.param = objMs;\n                this.apiDbProvider.premiumRateService(reqM);\n              }\n            }, (err) => {\n              console.log(err);\n            });\n\n          SQLiteHandle.isDoneSync = true;\n          //SQLiteHandle.recordTotalSize = 0;\n          this.getInState();\n          //this.alertCtrl.warning('บันทึกข้อมูลเรียบร้อย');\n          this.plancode = '';\n          this.plan = new TLPlanModel;\n        }\n        , (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  private async selectPlanFromDB(){\n    let plan = new TLPlanModel();\n    let requests  = new RequestModel;\n    requests.functionName = FunctionName.TLPLAN;\n    requests.serviceName = ServiceName.SELECT;\n    let tlplan :TLPlanModel = new TLPlanModel;\n    await this.tlplanService.search(tlplan)\n    .then(\n      sr=> {\n        let result : any = sr;\n        this.tlplanshow = result.data;\n      }\n    );\n  }\n\n  private async filterDropDown(){\n    if (this.tlplanfull != null && this.tlplanfull != undefined) {\n      if (this.tlplanshow != null && this.tlplanshow != undefined) {\n        this.dlplan  = this.tlplanfull.filter(a=>{\n          return  this.tlplanshow.filter(b=>{\n            return   b.planCode == a.planCode;\n          }).length == 0\n        })\n      }\n    }\n  }\n\n  private deletePlanCode(plancodedelete: string){\n\n    if (this.network.type === 'none') {\n      this.alertCtrl.warning(\"กรุณาเชื่อมต่ออินเทอร์เน็ต เพื่อลบแบบประกัน\");\n      return;\n    }\n    this.alertCtrl.confirm('คุณแน่ใจที่จะลบแบบประกันนี้').then(() => {\n\n      let plan = new TLPlanModel();\n      let requests  = new RequestModel;\n      requests.mode = 1;\n      requests.functionName = FunctionName.TLPLAN;\n      requests.serviceName = ServiceName.DELETE;\n      plan.planCode  = plancodedelete;\n       this.tlplanService.delete(plan).then(\n        sr=> {\n          this.getStart();\n        }).then(\n          (res) => {\n\n            let objM : PmrateM = new PmrateM();\n            objM.plancode = plancodedelete;\n  \n            let objMs : Array<PmrateM> = [];\n            objMs.push(objM);\n\n            let reqM: RequestModel = new RequestModel();\n            reqM.functionName = FunctionName.PMRATE;\n            reqM.serviceName = ServiceName.DELETE;\n            reqM.param = objMs;\n            this.apiDbProvider.pmrateService(reqM);\n\n          }, (err) => {\n            console.log(err);\n          }\n        ).then(\n          (res) => {\n\n            let objM : PlanRiderModel = new PlanRiderModel();\n            objM.plancode = plancodedelete;\n  \n            let objMs : Array<PlanRiderModel> = [];\n            objMs.push(objM);\n\n            let reqM: RequestModel = new RequestModel();\n            reqM.functionName = FunctionName.PLAN_RIDER;\n            reqM.serviceName = ServiceName.DELETE;\n            reqM.param = objMs;\n            this.apiDbProvider.planRiderService(reqM);\n\n          }, (err) => {\n            console.log(err);\n          }\n        ).then(\n          (res) => {\n\n            let objM : SumrateM = new SumrateM();\n            objM.plancode = plancodedelete;\n  \n            let objMs : Array<SumrateM> = [];\n            objMs.push(objM);\n\n            let reqM: RequestModel = new RequestModel();\n            reqM.functionName = FunctionName.SUMRATE;\n            reqM.serviceName = ServiceName.DELETE;\n            reqM.param = objMs;\n            this.apiDbProvider.sumrateService(reqM);\n\n          }, (err) => {\n            console.log(err);\n          }\n        ).then(\n          (res) => {\n\n            let objM : ExtendedM = new ExtendedM();\n            objM.plancode = plancodedelete;\n  \n            let objMs : Array<ExtendedM> = [];\n            objMs.push(objM); \n\n            let reqM: RequestModel = new RequestModel();\n            reqM.functionName = FunctionName.EXTENDED;\n            reqM.serviceName = ServiceName.DELETE;\n            reqM.param = objMs;\n            this.apiDbProvider.extendedService(reqM);\n\n          }, (err) => { \n            console.log(err);\n          }\n        ).then(\n          (res) => {\n\n            let objM : CouponM = new CouponM();\n            objM.plancode = plancodedelete;\n  \n            let objMs : Array<CouponM> = [];\n            objMs.push(objM); \n\n            let reqM: RequestModel = new RequestModel();\n            reqM.functionName = FunctionName.COUPON;\n            reqM.serviceName = ServiceName.DELETE;\n            reqM.param = objMs;\n            this.apiDbProvider.couponService(reqM);\n\n          }, (err) => { \n            console.log(err);\n          }\n        ).then(\n          (res) => {\n\n            let objM : PremiumRateM = new PremiumRateM();\n            objM.plancode = plancodedelete;\n  \n            let objMs : Array<PremiumRateM> = [];\n            objMs.push(objM); \n\n            let reqM: RequestModel = new RequestModel();\n            reqM.functionName = FunctionName.PREMIUMRATE;\n            reqM.serviceName = ServiceName.DELETE;\n            reqM.param = objMs;\n            this.apiDbProvider.premiumRateService(reqM);\n\n          }, (err) => { \n            console.log(err);\n          }\n        );\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/setting/setting.ts"],"sourceRoot":""}